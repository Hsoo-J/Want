<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis">


	<!-- signup -->
	<insert id="signup_ok" parameterType="com.exam.model1.user.UserTO">
		insert into user
		values( #{id}, #{pwd}, #{name}, #{birth}, #{mail}, #{phone}, #{nick}, now(),
		ifnull( #{profile}, profile ), ifnull( #{greet}, greet ) )
	</insert>

	<select id="nick_lookup" parameterType="com.exam.model1.user.UserTO"
		resultType="Int">
		select count( nick )
		from user
		where nick like #{ nick };
	</select>


	<!-- 회원있는지 여부확인 -->
	<select id="login_lookup" parameterType="com.exam.model1.user.UserTO"
		resultType="Int">
		select count( id )
		from user
		where id like #{ id };
	</select>

	<select id="login_ok" parameterType="com.exam.model1.user.UserTO" resultType="Int">
		select count(*)
		from user
		where id like #{id} and pwd like #{pwd}
	</select>
	
	<select id="login_ok_nick" parameterType="com.exam.model1.user.UserTO" resultType="com.exam.model1.user.UserTO">
		select id, nick, profile
		from user
		where id like #{id} and pwd like #{pwd}
	</select>

	<select id="login_decry" parameterType="com.exam.model1.user.UserTO"
		resultType="com.exam.model1.user.UserTO">
		select pwd
		from user
		where id like #{id}
	</select>

	<!-- 회원있는지 여부확인 -->
	<select id="pwFind_lookup"
		parameterType="com.exam.model1.user.UserTO" resultType="Int">
		select count( id )
		from user
		where id like #{ id };
	</select>

	<!-- 메일 일치 여부 확인 -->
	<select id="pwFind_ok" parameterType="com.exam.model1.user.UserTO"
		resultType="Int">
		select count(*)
		from user
		where id = #{id} and mail = #{mail}
	</select>

	<!-- 전송을 위한 비밀번호 조회 -->
	<select id="pwdFind_update"
		parameterType="com.exam.model1.user.UserTO"
		resultType="com.exam.model1.user.UserTO">
		select pwd
		from user
		where id = #{id} and mail = #{mail}
	</select>



	<!-- ================  랜선여행 하기  ================= -->
	<!--Lantriplist -->
	<select id="lanTripList" resultType="com.exam.model1.lantrip.LanTripTO">
		select no, subject, writer, date_format(wdate, '%Y-%m-%d') wdate, hit, location, video, reply, heart
		from l_board
	</select>

	<!-- lanTrip write_ok -->
	 
	<insert id="lanTrip_write_ok" parameterType="com.exam.model1.lantrip.LanTripTO">
		insert into l_board
		values(0, #{ subject }, #{ content }, #{ writer }, now(), 0, #{ location }, #{ video }, 0, 0 )
	</insert>
	
	<!-- lanTrip view -->
	<select id="lanTrip_view" parameterType="com.exam.model1.lantrip.LanTripTO" resultType="com.exam.model1.lantrip.LanTripTO">
		select no, subject, writer, date_format(wdate, '%Y-%m-%d') wdate, content, hit, location, video, reply, heart
		from l_board
		where no=#{no}
	</select>
	<update id="view_hit" parameterType="com.exam.model1.lantrip.LanTripTO">
		update l_board set hit=hit+1
		where no=#{no}
	</update>
	
	<!-- lanTrip delete_ok -->
	<delete id="lanTrip_delete_ok" parameterType="com.exam.model1.lantrip.LanTripTO">
		delete from l_board
		where no=#{no}
	</delete>
	
	<!-- lanTrip modify -->
	<select id="lanTrip_modify" parameterType="com.exam.model1.lantrip.LanTripTO" resultType="com.exam.model1.lantrip.LanTripTO">
		select no, subject, content, writer, date_format(wdate, '%Y-%m-%d') wdate, hit, location, video
		from l_board
		where no=#{no}
	</select>
	
	<!-- lanTrip modify_ok -->
	<update id="lanTrip_modify_ok" parameterType="com.exam.model1.lantrip.LanTripTO">
		update l_board set subject = #{ subject }, content = #{ content }, video = #{ video }, location = #{ location }
		where no=#{no}
	</update>
	
	<!-- ================  랜선여행 신청하기  =================  -->
	<!-- LanTripApplyList -->
	<select id="LanTripApplyList"
		resultType="com.exam.model1.lantripApply.LanTripApplyTO"> <!-- 파라메터가 없으므로 parameter Type 필요 없음 -->
		select no, location, subject, writer, date_format(wdate, '%Y-%m-%d') wdate, hit, reply
		from la_board
	</select>

	<!-- LanTripApplyWriteOk -->
	<insert id="lanTrip_apply_write_ok" parameterType="com.exam.model1.lantripApply.LanTripApplyTO">
		insert into la_board
		values(0, #{ subject }, #{ content }, #{ writer }, now(), 0, #{ location }, #{ picture }, 0 )
	</insert>

	<!-- LanTripApplyView -->
	<select id="lanTrip_apply_view" parameterType="com.exam.model1.lantripApply.LanTripApplyTO" 
	resultType="com.exam.model1.lantripApply.LanTripApplyTO">
		select no, subject, content, writer, date_format(wdate, '%Y-%m-%d') wdate, hit, location, picture, reply
		from la_board
		where no = #{no}
	</select>
	<!-- 랜선여행신청하기 조회수 -->
	<update id="lanTrip_apply_view_hit" parameterType="com.exam.model1.lantripApply.LanTripApplyTO">
		update la_board
		set hit=hit+1
		where no = #{no}
	</update>
	<!-- LanTripApplyDeleteOk -->
	<delete id="lanTrip_apply_delete_ok" parameterType="com.exam.model1.lantripApply.LanTripApplyTO">
		delete from la_board
		where no = #{no}
	</delete>
	
	<!-- LanTripApplyModify -->
	<select id="lanTrip_apply_modify" parameterType="com.exam.model1.lantripApply.LanTripApplyTO" 
	resultType="com.exam.model1.lantripApply.LanTripApplyTO">
		select no, subject, content, writer, date_format(wdate, '%Y-%m-%d') wdate, hit, location, picture, reply
		from la_board
		where no = #{no}
	</select>
	
	<!-- LanTripApplyModifyOk -->
	<update id="lanTrip_apply_modify_ok" parameterType="com.exam.model1.lantripApply.LanTripApplyTO">
		update la_board
		set subject = #{subject}, content = #{content}, location = #{location}, picture = #{picture}
		where no = #{no}
	</update>

	<!--  =================  사진자랑하기   =================  -->
	<!-- 사진자랑 글쓰기  -->
	<insert id="picture_write_ok" parameterType="com.exam.model1.picture.PictureTO">
		insert into p_board
		values(0, #{ subject }, #{ content }, #{ writer }, now(), 0, #{ location }, #{ media }, 0 ,0)
	</insert>
	
	<!-- 로그인 전 사진자랑 리스트 -->
	<select id="picture_list" resultType="com.exam.model1.picture.PictureTO">
		select b.no, subject, content, writer, date_format(wdate,'%Y-%m-%d') wdate, hit, location, media, reply, heart, u.profile
		from p_board b left outer join user u
		on b.writer = u.nick
		order by b.no desc
	</select>

	<!-- 로그인 후 사진자랑 리스트 -->
	<select id="picture_list_login" parameterType="com.exam.model1.picture.PictureTO" resultType="com.exam.model1.picture.PictureTO">
		select b.no, subject, content, writer, date_format(wdate,'%Y-%m-%d') wdate, hit, location, media, reply, heart, h.hno, f.fno, u.profile
		from p_board b left outer join p_heart h
		on #{nick} = h.userid and b.no = h.bno
		left outer join p_favorite f
		on #{nick} = f.userid and b.no = f.bno
		left outer join user u
		on b.writer = u.nick
		order by b.no desc
	</select>
	
	<!-- 사진자랑 BEST5 리스트 -->
	<select id="best_picture_list" resultType="com.exam.model1.picture.PictureTO">
		select no, writer, hit, location, media, reply, heart
		from p_board
		order by heart desc
		limit 5
	</select>
	
	<!-- view modal -->
	<select id="picture_view" parameterType="com.exam.model1.picture.PictureTO" resultType="com.exam.model1.picture.PictureTO">
		select b.no, subject, content, writer, wdate, hit, location, media, reply, heart, h.hno, f.fno, u.profile
		from p_board b left outer join p_heart h
		on #{nick} = h.userid and b.no = h.bno
		left outer join p_favorite f
		on #{nick} = f.userid and b.no = f.bno
		left outer join user u
		on b.writer = u.nick
		where no=#{no}
	</select>
	<update id="picture_view_hit" parameterType="com.exam.model1.picture.PictureTO">
		update p_board set hit=hit+1 
		where no=#{no}
	</update>

	<!-- 좋아요 추가 -->
	<insert id="picture_heart_save" parameterType="com.exam.model1.pictureHeart.HeartTO">
		insert into p_heart
		values(0, #{bno}, #{userid})
	</insert>
	<update id="picture_heart_up" parameterType="com.exam.model1.picture.PictureTO">
		update p_board set heart=heart+1 
		where no=#{no}
	</update>
	
	<!-- 좋아요 삭제 -->
	<delete id="picture_heart_remove" parameterType="com.exam.model1.pictureHeart.HeartTO">
		delete from p_heart
		where bno=#{bno} and userid=#{userid}
	</delete>
	<update id="picture_heart_down" parameterType="com.exam.model1.picture.PictureTO">
		update p_board set heart=heart-1 
		where no=#{no}
	</update>
	
	<!-- 좋아요 추가/삭제시 좋아요 갯수 가져오기 -->
	<select id="picture_heart_count" parameterType="com.exam.model1.picture.PictureTO" resultType="com.exam.model1.picture.PictureTO">
		select heart 
		from p_board
		where no=#{no}
	</select>
	
	<!-- 댓글 테이블의 마지막 auto_increment 값을 가져옴 -->
	<select id="p_reply_max_no" resultType="int">
		select ifnull(max(no),0) from p_reply
	</select>
	
	<!-- 댓글 쓰기 -->
	<insert id="picture_reply_write" parameterType="com.exam.model1.pictureReply.ReplyTO">
		insert into p_reply
		values(0, #{bno}, #{grp}, 0, 0, #{writer}, #{content}, now())
	</insert>
	<!-- 모댓글일경우 no, grp 일치하게 함 -->
	<update id="picture_reply_check" parameterType="com.exam.model1.pictureReply.ReplyTO">
		update p_reply set grp=#{grp}
		where no != grp
	</update>
	
	<!-- 모댓글이 삭제된 댓글일때 그에 딸린 답글들이 모두삭제되면 테이블에서 완전히 삭제한다 -->
	<delete id="picture_reply_delete_after_rereply_delete" parameterType="com.exam.model1.pictureReply.ReplyTO">
		delete from p_reply
		where content="" and grp=#{grp}
	</delete>
	
	<!-- 답글 쓰기 -->
	<insert id="picture_rereply_write" parameterType="com.exam.model1.pictureReply.ReplyTO">
		insert into p_reply
		values(0, #{bno}, #{grp}, 0, #{grpl}, #{writer}, #{content}, now())
	</insert>
	
	<!-- p_board에 댓글수 증가 -->
	<update id="picture_reply_up" parameterType="com.exam.model1.picture.PictureTO">
		update p_board set reply=reply+1 
		where no=#{no}
	</update>
	
	<!-- 댓글 리스트 가져오기 -->
	<select id="picutre_replyList" parameterType="com.exam.model1.pictureReply.ReplyTO" resultType="com.exam.model1.pictureReply.ReplyTO">
		select r.no, r.bno, r.grp, r.grpl, r.writer, r.content, date_format(wdate,'%Y-%m-%d') wdate, datediff(now(), wdate) wgap , u.profile
		from p_reply r left outer join user u
		on r.writer = u.nick
		where r.bno = #{bno}
		order by grp asc, grps desc
	</select>
	
	
	<!-- 댓글 추가/삭제시 댓글 갯수 가져오기 -->
	<select id="picture_reply_count" parameterType="com.exam.model1.picture.PictureTO" resultType="com.exam.model1.picture.PictureTO">
		select reply 
		from p_board
		where no=#{no}
	</select>
	
	<!-- 모댓글의 답글수를 카운트 -->
	<select id="picture_count_rereply" parameterType="com.exam.model1.pictureReply.ReplyTO" resultType="int">
		select count(no)
		from p_reply
		where no != #{no} and grp = #{no}
	</select>
	
	<!-- 답글수를 카운트 -->
	<select id="picture_count_rereply_fromrereply" parameterType="com.exam.model1.pictureReply.ReplyTO" resultType="int">
		select count(no)
		from p_reply
		where no != #{grp} and grp = #{grp}
	</select>
	
	<!-- 모댓글 삭제 - 답글 없음 -->
	<delete id="picture_reply_delete" parameterType="com.exam.model1.pictureReply.ReplyTO">
		delete from p_reply
		where no=#{no}
	</delete>
	
	<!-- 모댓글 삭제 - 답글 있음 -->
	<update id="picture_reply_not_delete" parameterType="com.exam.model1.pictureReply.ReplyTO">
		update p_reply set content=""
		where no=#{no}
	</update>
	
	<!-- p_board에 댓글수 감소 -->
	<update id="picture_reply_down" parameterType="com.exam.model1.picture.PictureTO">
		update p_board set reply=reply-1
		where no=#{no}
	</update>


	<!--ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ여행지정보 관련ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<!--ㅡㅡㅡㅡㅡㅡ 쇼핑관련 ㅡㅡㅡㅡㅡㅡ -->
	<!-- 쇼핑 write_ok -->
	<insert id="shop_write_ok" parameterType="com.exam.model1.shopping.ShoppingTO">
		insert into s_board
		values(0, #{ subject }, #{ content }, #{ writer }, now(), 0, #{ location }, #{ picture }, 0, 0 )
	</insert>

	<!-- 쇼핑 list -->
	<select id="shopList" parameterType="com.exam.model1.shopping.ShoppingTO"
		resultType="com.exam.model1.shopping.ShoppingTO">
		select no, subject, content, writer, date_format(wdate, '%Y-%m-%d') wdate, hit, datediff(now(), wdate) wgap, ifnull(picture, '') picture, reply, heart
		from s_board
		where location like #{ location }
		order by no desc
	</select>

	<!-- 쇼핑 view -->
	<select id="shopView" parameterType="com.exam.model1.shopping.ShoppingTO" 
			resultType="com.exam.model1.shopping.ShoppingTO">
		select no, subject, content, writer, wdate, hit, location, picture, reply, heart
		from s_board
		where no = #{no}
	</select>
	
	<!-- 쇼핑 view hit 올리기 -->
	<update id="shopViewHit" parameterType="com.exam.model1.shopping.ShoppingTO">
		update s_board
		set hit = hit + 1 
		where no = #{no}
	</update>
	
	<!-- 쇼핑 view reply 수 불러오기 -->
	<update id="shopViewReply" parameterType="com.exam.model1.shopping.ShoppingTO">
		update s_board
		set reply = ( select count(*) 
				from s_reply
				where bno = #{no} )
		where no = #{no}
	</update>

	<!-- 쇼핑 comment list -->
	<select id="shopListComment" parameterType="com.exam.model1.shoppingComment.ShoppingCommentTO"
		resultType="com.exam.model1.shoppingComment.ShoppingCommentTO">
		select no, bno, writer, content, wdate
		from s_reply
		where bno = #{bno}
	</select>
	
	<!-- 쇼핑 comment write ok -->
	<insert id="shopViewCommentOk" parameterType="com.exam.model1.shoppingComment.ShoppingCommentTO">
		insert into s_reply
		values( 0, #{bno}, #{writer}, #{content}, now() )
	</insert>
	
	<!-- 쇼핑 delete_ok -->
	<delete id="shopDeleteOk" parameterType="com.exam.model1.shopping.ShoppingTO">
		delete from s_board
		where writer like #{writer} and no = #{no}
	</delete>
	
	<!-- 쇼핑 modify_ok -->
	<delete id="shopModifyOk" parameterType="com.exam.model1.shopping.ShoppingTO">
		update s_board
		set subject=#{subject}, content=#{content}, picture=#{picture}
		where no=#{no} and writer like #{writer}
	</delete>

	<!--ㅡㅡㅡㅡㅡㅡ 숙소관련 ㅡㅡㅡㅡㅡㅡ -->
	<!-- 숙소 write_ok -->
	<insert id="accom_write_ok"
		parameterType="com.exam.model1.accom.AccomTO">
		insert into a_board
		values(0, #{ subject }, #{ content }, #{ writer }, now(), 0, #{ location }, #{ picture }, 0, 0 )
	</insert>

	<!-- 숙소 list -->
	<select id="accomList" parameterType="com.exam.model1.accom.AccomTO"
		resultType="com.exam.model1.accom.AccomTO">
		select no, subject, writer, date_format(wdate, '%Y-%m-%d') wdate, hit, datediff(now(), wdate) wgap, ifnull(picture, '') picture, reply, heart
		from a_board
		where location like #{ location }
		order by no desc
	</select>

	<!-- 숙소 view -->
	<select id="accomView" parameterType="com.exam.model1.accom.AccomTO" 
			resultType="com.exam.model1.accom.AccomTO">
		select no, subject, content, writer, wdate, hit, location, picture, reply, heart
		from a_board
		where no = #{no}
	</select>
	
	<!-- 숙소 view hit 올리기 -->
	<update id="accomViewHit" parameterType="com.exam.model1.accom.AccomTO">
		update a_board
		set hit = hit + 1 
		where no = #{no}
	</update>
	
	<!-- 숙소 view reply 수 불러오기 -->
	<update id="accomViewReply" parameterType="com.exam.model1.accom.AccomTO">
		update a_board
		set reply = ( select count(*) 
				from a_reply
				where bno = #{no} )
		where no = #{no}
	</update>
	
	<!-- 숙소 comment list -->
	<select id="accomListComment" parameterType="com.exam.model1.accomComment.AccomCommentTO"
		resultType="com.exam.model1.accomComment.AccomCommentTO">
		select no, bno, writer, content, wdate
		from a_reply
		where bno = #{bno}
	</select>
	
	<!-- 숙소 comment write ok -->
	<insert id="accomViewCommentOk" parameterType="com.exam.model1.accomComment.AccomCommentTO">
		insert into a_reply
		values(0, #{bno}, #{writer}, #{content}, now() )
	</insert>
	
	<!-- 숙소 delete_ok -->
	<delete id="accomDeleteOk" parameterType="com.exam.model1.accom.AccomTO">
		delete from a_board
		where writer like #{writer} and no = #{no}
	</delete>
	
	<!-- 숙소 modify_ok -->
	<delete id="accomModifyOk" parameterType="com.exam.model1.accom.AccomTO">
		update a_board
		set subject=#{subject}, content=#{content}, picture=#{picture}
		where no=#{no} and writer like #{writer}
	</delete>

</mapper>

